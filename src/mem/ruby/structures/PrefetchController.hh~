#include <vector>

#include "base/statistics.hh"
#include "mem/protocol/CacheRequestType.hh"
#include "mem/protocol/CacheResourceType.hh"
#include "mem/protocol/RubyRequest.hh"
#include "mem/ruby/common/DataBlock.hh"
#include "mem/ruby/slicc_interface/AbstractCacheEntry.hh"
#include "mem/ruby/slicc_interface/RubySlicc_ComponentMapping.hh"
#include "mem/ruby/structures/AbstractReplacementPolicy.hh"
#include "mem/ruby/structures/BankedArray.hh"
#include "mem/ruby/system/CacheRecorder.hh"
#include "params/RubyCache.hh"
#include "sim/sim_object.hh"
class PrefetchController{
  public:
    PrefetchController(int core_count);
    ~PrefetchController();
    void newEvict(int evicting_core_id, int evicted_core_id, Tick tick())
    bool getTrigger(int evicted_core_id);
    Addr getPrefetchTriggerAddr();
    Addr getPrefetchAddr();
  private:
    std::vector<int> evict_count;
}
